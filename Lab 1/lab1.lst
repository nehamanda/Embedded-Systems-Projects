


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program initially written by: Yerraballi and Valvano
    3 00000000         ; Author: Neha Manda
    4 00000000         ; Date Created: 1/15/2018 
    5 00000000         ; Last Modified: 1/19/2023
    6 00000000         ; Brief description of the program: Solution to Lab1
    7 00000000         ; The objective of this system is to implement a parity 
                       system
    8 00000000         ; Hardware connections: 
    9 00000000         ;  One output is positive logic, 1 turns on the LED, 0 t
                       urns off the LED
   10 00000000         ;  Three inputs are positive logic, meaning switch not p
                       ressed is 0, pressed is 1
   11 00000000 400073FC 
                       GPIO_PORTD_DATA_R
                               EQU              0x400073FC
   12 00000000 40007400 
                       GPIO_PORTD_DIR_R
                               EQU              0x40007400
   13 00000000 4000751C 
                       GPIO_PORTD_DEN_R
                               EQU              0x4000751C
   14 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   15 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   16 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   17 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   18 00000000                 PRESERVE8
   19 00000000                 AREA             Data, ALIGN=2
   20 00000000         ; Declare global variables here if needed
   21 00000000         ; with the SPACE assembly directive
   22 00000000                 ALIGN            4
   23 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   24 00000000                 THUMB
   25 00000000                 EXPORT           EID
   26 00000000 4E 4D 33 
              32 37 37 
              33 00    EID     DCB              "NM32773",0 ;replace ABC123 wit
                                                            h your EID
   27 00000008                 EXPORT           RunGrader
   28 00000008                 ALIGN            4
   29 00000008 00000001 
                       RunGrader
                               DCD              1           ; change to nonzero
                                                             when ready for gra
                                                            ding
   30 0000000C         
   31 0000000C                 EXPORT           Lab1
   32 0000000C         
   33 0000000C         Lab1
   34 0000000C         ;initialization



ARM Macro Assembler    Page 2 


   35 0000000C         ; turning on clock
   36 0000000C 481D            LDR              R0, =SYSCTL_RCGCGPIO_R ; load a
                                                            ddress of clock int
                                                            o R0
   37 0000000E 6801            LDR              R1, [R0]    ; load value of clo
                                                            ck register into R1
                                                            
   38 00000010 F041 0110       ORR              R1, #0x10   ; turn on clock for
                                                             Port E
   39 00000014 6001            STR              R1, [R0]    ; store back in clo
                                                            ck register
   40 00000016 BF00            NOP
   41 00000018 BF00            NOP                          ; wait two clock cy
                                                            cles
   42 0000001A         
   43 0000001A         ; DIR: 0 = input, 1 = output
   44 0000001A 481B            LDR              R0, =GPIO_PORTE_DIR_R
   45 0000001C 6801            LDR              R1, [R0]
   46 0000001E F021 0107       BIC              R1, #0x07   ; clear bits 0, 1, 
                                                            and 2
   47 00000022 F041 0110       ORR              R1, #0x10   ; set bit 4
   48 00000026 6001            STR              R1, [R0]
   49 00000028         
   50 00000028         ;DEN
   51 00000028 4818            LDR              R0, =GPIO_PORTE_DEN_R
   52 0000002A 6801            LDR              R1, [R0]
   53 0000002C F041 0117       ORR              R1, #0x17
   54 00000030 6001            STR              R1, [R0]
   55 00000032         
   56 00000032         
   57 00000032         
   58 00000032         loop
   59 00000032         ;main program loop
   60 00000032 F04F 0404       MOV              R4, #4
   61 00000036 F04F 0505       MOV              R5, #5
   62 0000003A F04F 0606       MOV              R6, #6
   63 0000003E F04F 0707       MOV              R7, #7
   64 00000042 B460            PUSH             {R5,R6}
   65 00000044 FA44 F407       ASR              R4,R4,R7
   66 00000048 EA85 0706       EOR              R7,R5,R6
   67 0000004C B490            PUSH             {R7,R4}
   68 0000004E BCF0            POP              {R7,R5,R4,R6}
   69 00000050 480F            LDR              R0, =GPIO_PORTE_DATA_R ; load R
                                                            0 with address of d
                                                            ata register
   70 00000052 6801            LDR              R1, [R0]    ; load R1 with cont
                                                            ents of data regist
                                                            er
   71 00000054 F001 0201       AND              R2, R1, #0x01 ; select bit 0 of
                                                             data register cont
                                                            ents
   72 00000058 F001 0302       AND              R3, R1, #0x02 ; select bit 1 of
                                                             data register cont
                                                            ents
   73 0000005C EA4F 0353       LSR              R3, R3, #1  ; logical shift rig
                                                            ht of bit 1
   74 00000060 EA82 0203       EOR              R2, R2, R3  ; add bit 1 to bit 
                                                            0
   75 00000064 F001 0304       AND              R3, R1, #0x04 ; select bit 2 of



ARM Macro Assembler    Page 3 


                                                             data register cont
                                                            ents
   76 00000068 EA4F 0393       LSR              R3, R3, #2  ; logical shift rig
                                                            ht of bit 2
   77 0000006C EA82 0203       EOR              R2, R2, R3  ; R2 has the number
                                                             of switches turned
                                                             on
   78 00000070 F082 0201       EOR              R2, R2, #0x01
   79 00000074 EA4F 1202       LSL              R2, #4
   80 00000078 F021 0110       BIC              R1, #0x10
   81 0000007C EA41 0102       ORR              R1, R1, R2
   82 00000080 6001            STR              R1, [R0]
   83 00000082         
   84 00000082         
   85 00000082 E7D6            B                loop
   86 00000084         
   87 00000084         
   88 00000084         
   89 00000084                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
   90 00000084                 END                          ; end of file
              400FE608 
              40024400 
              4002451C 
              400243FC 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4 --fpu=
SoftVFP --depend=.\lab1.d -o.\lab1.o -I.\RTE\_Lab1 -IC:\Users\neham\AppData\Loc
al\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\neham\AppData\Local\
Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1
" --predefine="__UVISION_VERSION SETA 538" --predefine="_RTE_ SETA 1" --predefi
ne="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\lab1.lst Lab1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Data 00000000

Symbol: Data
   Definitions
      At line 19 in file Lab1.s
   Uses
      None
Comment: Data unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 23 in file Lab1.s
   Uses
      None
Comment: .text unused
EID 00000000

Symbol: EID
   Definitions
      At line 26 in file Lab1.s
   Uses
      At line 25 in file Lab1.s
Comment: EID used once
Lab1 0000000C

Symbol: Lab1
   Definitions
      At line 33 in file Lab1.s
   Uses
      At line 31 in file Lab1.s
Comment: Lab1 used once
RunGrader 00000008

Symbol: RunGrader
   Definitions
      At line 29 in file Lab1.s
   Uses
      At line 27 in file Lab1.s
Comment: RunGrader used once
loop 00000032

Symbol: loop
   Definitions
      At line 58 in file Lab1.s
   Uses
      At line 85 in file Lab1.s
Comment: loop used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTD_DATA_R 400073FC

Symbol: GPIO_PORTD_DATA_R
   Definitions
      At line 11 in file Lab1.s
   Uses
      None
Comment: GPIO_PORTD_DATA_R unused
GPIO_PORTD_DEN_R 4000751C

Symbol: GPIO_PORTD_DEN_R
   Definitions
      At line 13 in file Lab1.s
   Uses
      None
Comment: GPIO_PORTD_DEN_R unused
GPIO_PORTD_DIR_R 40007400

Symbol: GPIO_PORTD_DIR_R
   Definitions
      At line 12 in file Lab1.s
   Uses
      None
Comment: GPIO_PORTD_DIR_R unused
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 14 in file Lab1.s
   Uses
      At line 69 in file Lab1.s
Comment: GPIO_PORTE_DATA_R used once
GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 16 in file Lab1.s
   Uses
      At line 51 in file Lab1.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 15 in file Lab1.s
   Uses
      At line 44 in file Lab1.s
Comment: GPIO_PORTE_DIR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 17 in file Lab1.s
   Uses
      At line 36 in file Lab1.s
Comment: SYSCTL_RCGCGPIO_R used once
7 symbols
349 symbols in table
