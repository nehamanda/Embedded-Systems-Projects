


ARM Macro Assembler    Page 1 


    1 00000000         ; StringConversion.s
    2 00000000         ; Student names: Neha Manda & Esther Peng
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; ECE319K lab 7 number to string conversions
    6 00000000         ;
    7 00000000         ; Used in ECE319K Labs 7,8,9,10. You write these two fun
                       ctions
    8 00000000         
    9 00000000         
   10 00000000                 EXPORT           Dec2String
   11 00000000                 EXPORT           Fix2String
   12 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   13 00000000                 THUMB
   14 00000000                 PRESERVE8
   15 00000000         
   16 00000000         
   17 00000000         ;-----------------------Dec2String----------------------
                       -
   18 00000000         ; Convert a 32-bit number into unsigned decimal format
   19 00000000         ; String the string into the empty array add null-termin
                       ation
   20 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   21 00000000         ;        R1 pointer to empty array
   22 00000000         ; Output: none
   23 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   24 00000000         Dec2String
   25 00000000 00000004 
                       x       EQU              4
   26 00000000 00000008 
                       i       EQU              8
   27 00000000         
   28 00000000 B500            PUSH             {LR}
   29 00000002 B083            SUB              SP, #12
   30 00000004 46EC            MOV              R12, SP
   31 00000006         
   32 00000006         
   33 00000006         
   34 00000006 F04F 030A       MOV              R3, #10
   35 0000000A F8CC 3004       STR              R3, [R12, #x]
   36 0000000E         
   37 0000000E F04F 0300       MOV              R3, #0
   38 00000012 F8CC 3008       STR              R3, [R12, #i]
   39 00000016 B408            PUSH             {R3}
   40 00000018         
   41 00000018 F000 F80B       BL               OutDec
   42 0000001C         
   43 0000001C         s
   44 0000001C BC08            POP              {R3}
   45 0000001E 600B            STR              R3, [R1]
   46 00000020 F101 0101       ADD              R1, #1
   47 00000024 2B00            CMP              R3, #0
   48 00000026 D1F9            BNE              s
   49 00000028         
   50 00000028 46E5            MOV              SP, R12
   51 0000002A B003            ADD              SP, #12



ARM Macro Assembler    Page 2 


   52 0000002C F85D EB04       POP              {LR}
   53 00000030         
   54 00000030         
   55 00000030         
   56 00000030 4770            BX               LR
   57 00000032         
   58 00000032         
   59 00000032         OutDec
   60 00000032         
   61 00000032 4602            MOV              R2, R0
   62 00000034 F8DC 3004       LDR              R3, [R12, #x]
   63 00000038 FBB0 F0F3       UDIV             R0, R3
   64 0000003C FB00 F303       MUL              R3, R0, R3
   65 00000040 EBA2 0303       SUB              R3, R2, R3
   66 00000044 F103 0330       ADD              R3, R3, #0x30
   67 00000048 B408            PUSH             {R3}
   68 0000004A 2800            CMP              R0, #0
   69 0000004C D000            BEQ              done
   70 0000004E         
   71 0000004E         
   72 0000004E E7F0            B                OutDec
   73 00000050         done
   74 00000050 4770            BX               LR
   75 00000052         ;* * * * * * * * End of Dec2String * * * * * * * *
   76 00000052         
   77 00000052         ; -----------------------Fix2String---------------------
                       -
   78 00000052         ; Create characters for LCD display in fixed-point forma
                       t
   79 00000052         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   80 00000052         ; Inputs:  R0 is an unsigned 32-bit number
   81 00000052         ;          R1 pointer to empty array
   82 00000052         ; Outputs: none
   83 00000052         ; E.g., R0=0,    then create "0.000 "
   84 00000052         ;       R0=3,    then create "0.003"
   85 00000052         ;       R0=89,   then create "0.089"
   86 00000052         ;       R0=123,  then create "0.123"
   87 00000052         ;       R0=9999, then create "9.999"
   88 00000052         ;       R0>9999, then create "*.***"
   89 00000052         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   90 00000052         Fix2String
   91 00000052 00000000 
                       space   EQU              0
   92 00000052 B510            PUSH             {R4, LR}
   93 00000054         
   94 00000054 B082            SUB              SP, #8
   95 00000056 46EC            MOV              R12, SP
   96 00000058 F04F 0320       MOV              R3, #32
   97 0000005C F8CC 3000       STR              R3, [R12, #space]
   98 00000060         
   99 00000060 F242 720F       LDR              R2, =9999
  100 00000064 4290            CMP              R0, R2
  101 00000066 D91D            BLS              later
  102 00000068         
  103 00000068 F04F 022A       MOV              R2, #42
  104 0000006C 600A            STR              R2, [R1]
  105 0000006E F101 0101       ADD              R1, #1



ARM Macro Assembler    Page 3 


  106 00000072 F04F 022E       MOV              R2, #46
  107 00000076 600A            STR              R2, [R1]
  108 00000078 F101 0101       ADD              R1, #1
  109 0000007C F04F 022A       MOV              R2, #42
  110 00000080 600A            STR              R2, [R1]
  111 00000082 F101 0101       ADD              R1, #1
  112 00000086 F04F 022A       MOV              R2, #42
  113 0000008A 600A            STR              R2, [R1]
  114 0000008C F101 0101       ADD              R1, #1
  115 00000090 F04F 022A       MOV              R2, #42
  116 00000094 600A            STR              R2, [R1]
  117 00000096 F101 0101       ADD              R1, #1
  118 0000009A         
  119 0000009A         
  120 0000009A 46E5            MOV              SP, R12
  121 0000009C B002            ADD              SP, #8
  122 0000009E E8BD 4010       POP              {R4, LR}
  123 000000A2 4770            BX               LR
  124 000000A4         
  125 000000A4         later
  126 000000A4 F44F 737A       LDR              R3, =1000
  127 000000A8         again
  128 000000A8 4602            MOV              R2, R0
  129 000000AA FBB0 F0F3       UDIV             R0, R3
  130 000000AE F100 0030       ADD              R0, #0x30
  131 000000B2 6008            STR              R0, [R1]
  132 000000B4 F1A0 0030       SUB              R0, #0x30
  133 000000B8 F101 0101       ADD              R1, #1
  134 000000BC FB00 F403       MUL              R4, R0, R3
  135 000000C0 EBA2 0004       SUB              R0, R2, R4
  136 000000C4 F04F 040A       MOV              R4, #10
  137 000000C8 FBB3 F3F4       UDIV             R3, R4
  138 000000CC 2B64            CMP              R3, #100
  139 000000CE D104            BNE              move
  140 000000D0 F04F 042E       MOV              R4, #46
  141 000000D4 600C            STR              R4, [R1]
  142 000000D6 F101 0101       ADD              R1, #1
  143 000000DA         move
  144 000000DA 2B00            CMP              R3, #0
  145 000000DC D1E4            BNE              again
  146 000000DE F04F 0220       MOV              R2, #0x20
  147 000000E2 F8DC 2000       LDR              R2, [R12, #space]
  148 000000E6 600A            STR              R2, [R1]
  149 000000E8         
  150 000000E8         
  151 000000E8 46E5            MOV              SP, R12
  152 000000EA B002            ADD              SP, #8
  153 000000EC         
  154 000000EC E8BD 4010       POP              {R4, LR}
  155 000000F0         
  156 000000F0 4770            BX               LR
  157 000000F2         
  158 000000F2         
  159 000000F2         
  160 000000F2         
  161 000000F2         
  162 000000F2         
  163 000000F2 00 00           ALIGN                        ; make sure the end
                                                             of this section is



ARM Macro Assembler    Page 4 


                                                             aligned
  164 000000F4                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4 --fpu=
SoftVFP --depend=.\stringconversion.d -o.\stringconversion.o -I.\RTE\_Lab7 -IC:
\Users\neham\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Us
ers\neham\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --
predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISIO
N_VERSION SETA 538" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1
" --predefine="_RTE_ SETA 1" --list=.\stringconversion.lst ..\inc\StringConvers
ion.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 12 in file ..\inc\StringConversion.s
   Uses
      None
Comment: .text unused
Dec2String 00000000

Symbol: Dec2String
   Definitions
      At line 24 in file ..\inc\StringConversion.s
   Uses
      At line 10 in file ..\inc\StringConversion.s
Comment: Dec2String used once
Fix2String 00000052

Symbol: Fix2String
   Definitions
      At line 90 in file ..\inc\StringConversion.s
   Uses
      At line 11 in file ..\inc\StringConversion.s
Comment: Fix2String used once
OutDec 00000032

Symbol: OutDec
   Definitions
      At line 59 in file ..\inc\StringConversion.s
   Uses
      At line 41 in file ..\inc\StringConversion.s
      At line 72 in file ..\inc\StringConversion.s

again 000000A8

Symbol: again
   Definitions
      At line 127 in file ..\inc\StringConversion.s
   Uses
      At line 145 in file ..\inc\StringConversion.s
Comment: again used once
done 00000050

Symbol: done
   Definitions
      At line 73 in file ..\inc\StringConversion.s
   Uses
      At line 69 in file ..\inc\StringConversion.s
Comment: done used once
later 000000A4

Symbol: later
   Definitions
      At line 125 in file ..\inc\StringConversion.s
   Uses
      At line 101 in file ..\inc\StringConversion.s
Comment: later used once
move 000000DA




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: move
   Definitions
      At line 143 in file ..\inc\StringConversion.s
   Uses
      At line 139 in file ..\inc\StringConversion.s
Comment: move used once
s 0000001C

Symbol: s
   Definitions
      At line 43 in file ..\inc\StringConversion.s
   Uses
      At line 48 in file ..\inc\StringConversion.s
Comment: s used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

i 00000008

Symbol: i
   Definitions
      At line 26 in file ..\inc\StringConversion.s
   Uses
      At line 38 in file ..\inc\StringConversion.s
Comment: i used once
space 00000000

Symbol: space
   Definitions
      At line 91 in file ..\inc\StringConversion.s
   Uses
      At line 97 in file ..\inc\StringConversion.s
      At line 147 in file ..\inc\StringConversion.s

x 00000004

Symbol: x
   Definitions
      At line 25 in file ..\inc\StringConversion.s
   Uses
      At line 35 in file ..\inc\StringConversion.s
      At line 62 in file ..\inc\StringConversion.s

3 symbols
347 symbols in table
